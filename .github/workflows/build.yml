# This is a basic workflow to help you get started with Actions

name: Build and Deploy AsciiDoc Documentation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write  # Required for pushing to the repository (e.g., `gh-pages` branch)
  pages: write     # Required for deploying to GitHub Pages
  id-token: write  # Required for using GitHub Pages with actions

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Step 2: Set up Ruby environment
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0 # Specify the Ruby version
          cache: bundler # Cache dependencies to speed up builds

      # Runs a single command using the runners shell
      - name: Install Asciidoctor and extensions
        run: |
          gem install asciidoctor
          gem install asciidoctor-pdf # Optional, for PDF generation

      # Build resume
      - name: Build AsciiDoc Resume
        run: |
          mkdir -p build/html
          asciidoctor -D build/html index.adoc

      # Generate PDF
      - name: Generate PDF
        run: |
          mkdir -p build/pdf
          asciidoctor-pdf -D build/pdf index.adoc

      # Upload artifacts (HTML and/or PDF)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Asciidoc-Build
          path: build/

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # GitHub automatically provides this secret
          publish_dir: build/html  # Directory where the HTML output is stored
          destination_dir: ""  # Deploy to the root of the `gh-pages` branch
      
